version: '3.9'
services:
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    restart: on-failure
    expose:
      - ${POSTGRES_EXPORTER_PORT}
    depends_on:
      - postgres
    environment:
      DATA_SOURCE_NAME: ${POSTGRES_EXPORTER_DATA_SOURCE_NAME}
    networks:
      - microservices

  prometheus:
    image: lsefiane/prometheus-service:latest
    container_name: prometheus
    restart: unless-stopped
    expose:
      - ${PROMETHEUS_PORT}
    volumes:
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - node-exporter
      - postgres-exporter
      - cadvisor
      - alertmanager
      - consul
    networks:
      - microservices

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    expose:
      - ${ALERT_MANAGER_PORT}
    volumes:
      - ./alertmanager-service:/etc/alertmanager
      - alertmanager-data:/data
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--log.level=debug'
    networks:
      - microservices


  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    privileged: true
    restart: on-failure
    expose:
      - ${NODE_EXPORTER_PORT}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - microservices

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: on-failure
    expose:
      - ${CADVISOR_CONTAINER_PORT}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - microservices

  grafana:
    image: lsefiane/grafana-service:latest
    container_name: grafana
    restart: unless-stopped
    expose:
      - ${GRAFANA_PORT}
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: ${GRAFANA_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH}
    networks:
      - microservices

volumes:
  prometheus-data:
  alertmanager-data:
  grafana-storage:

networks:
  microservices: